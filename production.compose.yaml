name: phalcon-production

services:
  traefik:
    image: "traefik:v3.1"
    command:
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  web:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.localhost`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=web"
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: runnable
    image: "${COMPOSE_PROJECT_NAME}-web:latest"
    env_file:
      - .env

  api:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-${COMPOSE_PROJECT_NAME}.rule=Host(`api.${COMPOSE_PROJECT_NAME}.localhost`)"
      - "traefik.http.routers.api-${COMPOSE_PROJECT_NAME}.entrypoints=web"
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: runnable
      args:
        PHALCON_MODULE: api
    image: "${COMPOSE_PROJECT_NAME}-api:latest"
    env_file:
      - .env

  db:
    image: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  pg_data:
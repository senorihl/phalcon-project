name: phalcon-project

services:
  traefik:
    image: "traefik:v3.1"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  php:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.localhost`)"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}.headers.customrequestheaders.X-Phalcon-Module=web"
      - "traefik.http.routers.api-${COMPOSE_PROJECT_NAME}.middlewares=api-${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.api-${COMPOSE_PROJECT_NAME}.rule=Host(`api.${COMPOSE_PROJECT_NAME}.localhost`)"
      - "traefik.http.middlewares.api-${COMPOSE_PROJECT_NAME}.headers.customrequestheaders.X-Phalcon-Module=api"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=web"
      - "traefik.http.routers.api-${COMPOSE_PROJECT_NAME}.entrypoints=web"
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: core
    image: "${COMPOSE_PROJECT_NAME}:latest"
    volumes:
      - .:/var/www/app/:rw
    env_file:
      - .env
    environment:
      DEV_UID: ${DEV_UID}

  assets:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: assets-builder
    image: "${COMPOSE_PROJECT_NAME}-assets:latest"
    volumes:
      - .:/var/www/app/:rw
    environment:
      NODE_DEV_UID: ${DEV_UID}
    command: [ "yarn", "webpack", "--progress", "--watch" ]

  db:
    image: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  pg_data: